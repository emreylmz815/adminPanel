@using System
@model WebApplication1.Models.CafeMenuViewModel

@{
    ViewBag.Title = "Kafe Menüsü";
    var activeCategory = Model.ActiveCategory;
    Layout = "~/Areas/admin/Views/Shared/_LayoutAdmin.cshtml";

}
<div class="content-wrapper">
    <h2 class="mb-4">Kafe Menu Yonetimi</h2>

    <div class="row">
        <div class="col-lg-4 mb-4">
            <div class="card mb-4">
                <div class="card-header">Yeni Kategori</div>
                <div class="card-body">
                    @using (Html.BeginForm("AddCategory", "Menu", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label for="category-name">Kategori Adi</label>
                            <input type="text" id="category-name" name="name" class="form-control" placeholder="Orn. Kahveler" required />
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Kategori Ekle</button>
                    }
                </div>
            </div>

            <div class="card">
                <div class="card-header">Yeni Urun</div>
                <div class="card-body">
                    @if (!Model.OrderedCategories.Any())
                    {
                        <p class="text-muted mb-0">Once bir kategori ekleyin.</p>
                    }
                    else
                    {
                        using (Html.BeginForm("AddProduct", "Menu", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <label for="product-category">Kategori</label>
                                <select id="product-category" name="CategoryId" class="form-control">
                                    @foreach (var category in Model.OrderedCategories)
                                    {
                                        <option value="@category.Id" @(category.Id == Model.ActiveCategoryId ? "selected" : string.Empty)>@category.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="product-title">Urun Adi</label>
                                <input type="text" id="product-title" name="Title" class="form-control" placeholder="Orn. Flat White" required />
                            </div>
                            <div class="form-group">
                                <label for="product-description">Icerik</label>
                                <textarea id="product-description" name="Description" class="form-control" rows="3" placeholder="Urun aciklamasi"></textarea>
                            </div>
                            <div class="form-group">
                                <label for="product-price">Fiyat </label>
                                <input type="number" id="product-price" name="Price" class="form-control" step="0.5" min="0" placeholder="50" />
                            </div>
                            <div class="form-group">
                                <label for="product-image">Gorsel Bağlantisi</label>
                                <input type="url" id="product-image" name="ImageUrl" class="form-control" placeholder="https://" />
                            </div>
                            <button type="submit" class="btn btn-success btn-block">Urun Ekle</button>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-8">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h3 class="mb-0">Menu</h3>
                @if (activeCategory != null)
                {
                    using (Html.BeginForm("RemoveCategory", "Menu", FormMethod.Post, new { onsubmit = "return confirm('Kategori kaldırılacak. Devam etmek istiyor musunuz?');" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="categoryId" value="@activeCategory.Id" />
                        <button type="submit" class="btn btn-outline-danger btn-sm">"@activeCategory.Name" kategorisini sil</button>
                    }
                }
            </div>

            @if (!Model.OrderedCategories.Any())
            {
                <div class="alert alert-info">Henüz bir kategori eklenmemis. Baslamak için sol taraftan yeni bir kategori olusturun.</div>
            }
            else
            {
                <ul class="nav nav-pills flex-wrap mb-4">
                    @foreach (var category in Model.OrderedCategories)
                    {
                        var isActive = category.Id == Model.ActiveCategoryId;
                        <li class="nav-item mr-2 mb-2">
                            <a class="nav-link @(isActive ? "active" : string.Empty)" href="@Url.Action("Index", new { categoryId = category.Id })">@category.Name</a>
                        </li>
                    }
                </ul>

                if (activeCategory == null)
                {
                    <div class="alert alert-warning">Secilen kategori bulunamadı. Lutfen listeden bir kategori secin.</div>
                }
                else if (!activeCategory.Products.Any())
                {
                    <div class="alert alert-secondary">Bu kategoride henuz urun yok. Sagdaki formu kullanarak urun ekleyebilirsiniz.</div>
                }
                else
                {
                    <div class="row">
                        @foreach (var product in activeCategory.Products.OrderBy(p => p.Title, StringComparer.CurrentCultureIgnoreCase))
                        {
                            <div class="col-md-6 mb-4">
                                <div class="card h-100">
                                    @if (!string.IsNullOrWhiteSpace(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Title" />
                                    }
                                    <div class="card-body d-flex flex-column">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h5 class="card-title mb-0">@product.Title</h5>
                                            <span class="badge badge-primary">@product.Price.ToString("C2")</span>
                                        </div>
                                        @if (!string.IsNullOrWhiteSpace(product.Description))
                                        {
                                            <p class="card-text text-muted">@product.Description</p>
                                        }
                                        <div class="mt-auto">
                                            @using (Html.BeginForm("RemoveProduct", "Menu", FormMethod.Post, new { onsubmit = "return confirm('Ürünü silmek istediğinize emin misiniz?');" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="hidden" name="categoryId" value="@activeCategory.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm btn-block">Urunu Sil</button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
    </div>
